# Generated by Django 5.2.4 on 2025-09-10 11:14

import django.core.files.storage
import django.db.models.deletion
import reference_genomes.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ReferenceGenome",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[("hg19", "hg19"), ("hg38", "hg38"), ("T2T", "T2T")],
                        default="hg38",
                    ),
                ),
                ("version", models.CharField(max_length=50, unique=True)),
                (
                    "annotations_file",
                    models.FileField(
                        storage=django.core.files.storage.FileSystemStorage(
                            allow_overwrite=True, file_permissions_mode=438
                        ),
                        upload_to=reference_genomes.models.upload_annotation_file,
                        validators=[reference_genomes.models.test_annotation_file],
                    ),
                ),
                ("annotations_file_checksum", models.CharField(blank=True, null=True)),
                (
                    "annotations_file_index",
                    models.FileField(
                        blank=True,
                        editable=False,
                        null=True,
                        storage=django.core.files.storage.FileSystemStorage(
                            allow_overwrite=True, file_permissions_mode=438
                        ),
                        upload_to=reference_genomes.models.upload_annotation_file,
                        validators=[reference_genomes.models.test_index_file],
                    ),
                ),
                (
                    "annotations_file_index_checksum",
                    models.CharField(blank=True, null=True),
                ),
                (
                    "chrom_size_file",
                    models.FileField(
                        storage=django.core.files.storage.FileSystemStorage(
                            allow_overwrite=True, file_permissions_mode=438
                        ),
                        upload_to=reference_genomes.models.upload_chrom_size_file,
                    ),
                ),
                ("chrom_size_file_checksum", models.CharField(blank=True, null=True)),
                (
                    "chrom_size_file_index",
                    models.FileField(
                        blank=True,
                        editable=False,
                        null=True,
                        storage=django.core.files.storage.FileSystemStorage(
                            allow_overwrite=True, file_permissions_mode=438
                        ),
                        upload_to=reference_genomes.models.upload_chrom_size_file,
                    ),
                ),
                (
                    "chrom_size_file_index_checksum",
                    models.CharField(blank=True, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Reference Genomes",
            },
        ),
        migrations.CreateModel(
            name="GeneSet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=666, unique=True)),
                (
                    "collection",
                    models.CharField(
                        choices=[
                            ("H", "Hallmark"),
                            ("C1", "Positional gene sets"),
                            ("C2", "Curated gene sets"),
                            ("C3", "Regulatory target gene sets"),
                            ("C4", "Computational gene sets"),
                            ("C5", "Ontology gene sets"),
                            ("C6", "Oncogenic signature gene sets"),
                            ("C7", "Immunologic signature gene sets"),
                            ("C8", "Cell type signature gene sets"),
                        ]
                    ),
                ),
                ("subcollection", models.CharField(null=True)),
                ("subset", models.CharField(null=True)),
                ("systematic_name", models.CharField(max_length=50)),
                ("pmid", models.CharField(blank=True, null=True)),
                ("exact_source", models.TextField(blank=True, null=True)),
                ("external_details_url", models.URLField(blank=True, null=True)),
                ("msigdb_url", models.URLField()),
                ("genes", models.JSONField()),
            ],
            options={
                "constraints": [
                    models.UniqueConstraint(
                        fields=("name", "collection", "subcollection"),
                        name="unique_gene_set",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="GenomicFeature",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(unique=True)),
                ("description", models.CharField()),
                ("type", models.CharField(choices=[("bed", "BED")], default="bed")),
                (
                    "file",
                    models.FileField(
                        blank=True,
                        storage=django.core.files.storage.FileSystemStorage(
                            allow_overwrite=True, file_permissions_mode=438
                        ),
                        upload_to=reference_genomes.models.upload_genomic_features_file,
                        validators=[
                            reference_genomes.models.test_genomic_features_file
                        ],
                    ),
                ),
                (
                    "file_checksum",
                    models.CharField(blank=True, editable=False, null=True),
                ),
                (
                    "file_index",
                    models.FileField(
                        blank=True,
                        editable=False,
                        null=True,
                        storage=django.core.files.storage.FileSystemStorage(
                            allow_overwrite=True, file_permissions_mode=438
                        ),
                        upload_to=reference_genomes.models.upload_genomic_features_file,
                        validators=[reference_genomes.models.test_index_file],
                    ),
                ),
                (
                    "file_index_checksum",
                    models.CharField(blank=True, editable=False, null=True),
                ),
                (
                    "reference_genome",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reference_genomes.referencegenome",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Genomic Features",
            },
        ),
        migrations.CreateModel(
            name="ChainFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        storage=django.core.files.storage.FileSystemStorage(
                            allow_overwrite=True, file_permissions_mode=438
                        ),
                        upload_to=reference_genomes.models.upload_chain_file,
                        validators=[reference_genomes.models.test_chain_file],
                    ),
                ),
                ("file_checksum", models.CharField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "source_genome",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="source_genome",
                        to="reference_genomes.referencegenome",
                    ),
                ),
                (
                    "target_genome",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="target_genome",
                        to="reference_genomes.referencegenome",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Chain Files",
            },
        ),
    ]
