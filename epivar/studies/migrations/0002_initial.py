# Generated by Django 5.2.4 on 2025-09-10 11:25

import django.core.files.storage
import django.core.validators
import django.db.models.deletion
import pgvector.django.vector
import studies.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("django_celery_results", "0014_alter_taskresult_status"),
        ("ontologies", "0001_initial"),
        ("reference_genomes", "0001_initial"),
        ("studies", "0001_pgvector"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Embedding",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.CharField(editable=False)),
                (
                    "embedding",
                    pgvector.django.vector.VectorField(dimensions=384, editable=False),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Sample",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sample_size",
                    models.IntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "replication_type",
                    models.CharField(
                        choices=[
                            ("biological", "Biological"),
                            ("technical", "Technical"),
                            ("unreplicated", "Unreplicated"),
                        ],
                        default="biological",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Biosample",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "analyte",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"category": "analyte"},
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="ontologies.term",
                    ),
                ),
                (
                    "cell",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="ontologies.celltype",
                    ),
                ),
                (
                    "tissue",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="ontologies.anatomicalstructure",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Investigation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "effect_size_metric",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"category": "effect_size_metric"},
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="ontologies.term",
                    ),
                ),
                (
                    "investigation_model",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"category": "investigation_model"},
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="ontologies.term",
                    ),
                ),
                (
                    "statistical_test",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"category": "statistical_test"},
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="ontologies.term",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Phenotype",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "hpo",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"category": "phenotype"},
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="ontologies.term",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Platform",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "assay",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"category": "assay"},
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="ontologies.term",
                    ),
                ),
                (
                    "platform",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"category": "platform"},
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="ontologies.term",
                    ),
                ),
                (
                    "target",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"category": "target"},
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="ontologies.term",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("project_id", models.CharField(editable=False, unique=True)),
                ("title", models.CharField(max_length=255)),
                ("authors", models.TextField()),
                ("contact", models.EmailField(max_length=254)),
                ("affiliation", models.TextField()),
                ("description", models.TextField()),
                (
                    "submitter",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Projects",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="StudyData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "submitted_data",
                    models.FileField(
                        storage=django.core.files.storage.FileSystemStorage(
                            file_permissions_mode=438
                        ),
                        upload_to=studies.models.data_path,
                        validators=[studies.models.validate_file_name],
                    ),
                ),
                (
                    "submitted_data_checksum",
                    models.CharField(blank=True, editable=False, null=True),
                ),
                (
                    "raw_data_storage",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("sra", "SRA"),
                            ("geo", "GEO"),
                            ("ega", "EGA"),
                            ("array_express", "Array Express"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "raw_data_accession_number",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("metadata", models.JSONField(blank=True, editable=False, null=True)),
                (
                    "reference_genome",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="reference_genomes.referencegenome",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProfilingStudy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("study_id", models.CharField(editable=False, unique=True)),
                (
                    "record_status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("deprecated", "Deprecated"),
                            ("review", "Under Review"),
                        ],
                        default="review",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("reference", models.CharField(blank=True, null=True)),
                ("overall_description", models.TextField(blank=True, null=True)),
                (
                    "sample_processing_description",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "data_processing_description",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "integration_status",
                    models.CharField(
                        choices=[
                            ("passed", "Passed"),
                            ("failed", "Failed"),
                            ("pending", "Pending"),
                            ("running", "Running"),
                        ],
                        default="pending",
                    ),
                ),
                (
                    "biosample",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="studies.biosample",
                    ),
                ),
                (
                    "embedding",
                    models.OneToOneField(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="studies.embedding",
                    ),
                ),
                (
                    "integration_task",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="django_celery_results.taskresult",
                    ),
                ),
                (
                    "platform",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="studies.platform",
                    ),
                ),
                (
                    "polymorphic_ctype",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="polymorphic_%(app_label)s.%(class)s_set+",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "reviewer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "submitter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="studies.project",
                    ),
                ),
                (
                    "sample",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="studies.sample"
                    ),
                ),
                (
                    "data",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profiling_study",
                        to="studies.studydata",
                    ),
                ),
            ],
            options={
                "verbose_name": "Profiling Study",
                "verbose_name_plural": "Profiling Studies",
            },
        ),
        migrations.CreateModel(
            name="InteractionStudy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("study_id", models.CharField(editable=False, unique=True)),
                (
                    "record_status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("deprecated", "Deprecated"),
                            ("review", "Under Review"),
                        ],
                        default="review",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("reference", models.CharField(blank=True, null=True)),
                ("overall_description", models.TextField(blank=True, null=True)),
                (
                    "sample_processing_description",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "data_processing_description",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "integration_status",
                    models.CharField(
                        choices=[
                            ("passed", "Passed"),
                            ("failed", "Failed"),
                            ("pending", "Pending"),
                            ("running", "Running"),
                        ],
                        default="pending",
                    ),
                ),
                (
                    "interaction_type",
                    models.CharField(
                        choices=[
                            ("genome-genome", "Genome ↔ Genome (e.g. chromatin loops)"),
                            (
                                "epigenome-epigenome",
                                "Epigenome ↔ Epigenome (e.g. histone marks crosstalk)",
                            ),
                            (
                                "epigenome-transcriptome",
                                "Epigenome ↔ Transcriptome (e.g. methylation-expression correlation)",
                            ),
                        ],
                        default="genome-genome",
                    ),
                ),
                (
                    "biosample",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="studies.biosample",
                    ),
                ),
                (
                    "embedding",
                    models.OneToOneField(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="studies.embedding",
                    ),
                ),
                (
                    "integration_task",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="django_celery_results.taskresult",
                    ),
                ),
                (
                    "polymorphic_ctype",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="polymorphic_%(app_label)s.%(class)s_set+",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "reviewer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "submitter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "investigation_model",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="studies.investigation",
                    ),
                ),
                (
                    "platform",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="studies.platform",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="studies.project",
                    ),
                ),
                (
                    "sample",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="studies.sample"
                    ),
                ),
                (
                    "data",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="interaction_study",
                        to="studies.studydata",
                    ),
                ),
            ],
            options={
                "verbose_name": "Interaction Study",
                "verbose_name_plural": "Interaction Studies",
            },
        ),
        migrations.CreateModel(
            name="AssociationStudy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("study_id", models.CharField(editable=False, unique=True)),
                (
                    "record_status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("deprecated", "Deprecated"),
                            ("review", "Under Review"),
                        ],
                        default="review",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("reference", models.CharField(blank=True, null=True)),
                ("overall_description", models.TextField(blank=True, null=True)),
                (
                    "sample_processing_description",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "data_processing_description",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "integration_status",
                    models.CharField(
                        choices=[
                            ("passed", "Passed"),
                            ("failed", "Failed"),
                            ("pending", "Pending"),
                            ("running", "Running"),
                        ],
                        default="pending",
                    ),
                ),
                (
                    "integration_task",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="django_celery_results.taskresult",
                    ),
                ),
                (
                    "polymorphic_ctype",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="polymorphic_%(app_label)s.%(class)s_set+",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "reviewer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "submitter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "biosample",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="studies.biosample",
                    ),
                ),
                (
                    "embedding",
                    models.OneToOneField(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="studies.embedding",
                    ),
                ),
                (
                    "investigation_model",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="studies.investigation",
                    ),
                ),
                (
                    "phenotype",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="studies.phenotype",
                    ),
                ),
                (
                    "platform",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="studies.platform",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="studies.project",
                    ),
                ),
                (
                    "sample",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="studies.sample"
                    ),
                ),
                (
                    "data",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="association_study",
                        to="studies.studydata",
                    ),
                ),
            ],
            options={
                "verbose_name": "Association Study",
                "verbose_name_plural": "Association Studies",
            },
        ),
    ]
